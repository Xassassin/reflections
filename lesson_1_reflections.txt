How did viewing a diff between two versions of a file help you see the bug that was introduced?

I could see the differences between the files, and as I scrolled through I could see what was wrong.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You could see the progress on the file, and identify any soure of issues.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

While I like the chossing when versions are committed, there something to be said about auto-save. You don't have to worry about forgetting. However, the history of it is an issue, as you won't be able to tag/comment on it.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

The use case for each calls for different styles of commiting. Google docs maybe worked on by multiple people, but generally only a doc at a time. While caters for different types of users, so it is up to the user to choose whether they want to commit a set of changes, or just one file.

How can you use the commands git log and git diff to view the history of files?

You can search for the changes you want using git log, and then use git diff to see the differences, and track what changed

How might using version control make you more confident to make changes that could break something?

You are safe knowing that you can always find where the bug was and revert to working code.

Now that you have your workspace set up, what do you want to try using Git for?

My brothers website, and my android development project.