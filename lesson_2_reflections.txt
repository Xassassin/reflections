What happens when you initialize a repository? Why do you need to do it?

Git creates meta deta identifying the folder as a repository. So that the folder becomes a git repo.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is only on your local machine, and you cannot edit files in it. It allows you to organise your commits logically before finally adding them to the repo.

How can you use the staging area to make sure you have one commit per logical change?

do a diff on the staging area and make sure the code in is only regarding the 1 logical change that you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When experimenting or refactoring. It allows you to keep the history of the changes separate.

How do the diagrams help you visualize the branch structure?

You can trace the diagrams to understand which branches have what features. fixes, changes, etc...

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A single branch with the commits from both branches. To emppha size that the changes happened on 2 separatly

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Git Merge:
Pro: Merge most changes automatically without need for user interaction
Cons: Some obvious megres would create conflict
	- Some changes refereing to code that is removed by another user would not be caught

Manual Merge:
Pro: Always merges the code correctly
Con: Very tidious
	- Mostly unecessary user interaction